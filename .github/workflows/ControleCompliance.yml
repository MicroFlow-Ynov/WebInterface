name: Controle

on:
  push:
    branches:
      - "**"

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Lint code
        run: npm run lint

      - name: Run tests
        run: npm test

  build-and-deploy:
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build the app
        run: npm run build

      # SonarQube scan on self-hosted SonarQube, commented for ressources saving
      # - name: SonarQube Scan
      #   uses: sonarsource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      #     SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
      #     SONAR_PROJECT_NAME: ${{ secrets.SONAR_PROJECT_NAME }}

      - name: SonarQube Scan
        run: echo "SonarQube scan skipped"

      # - name: Archive production artifacts to self hosted Nexus
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: dist

      - name: Archive production artifacts to Nexus
        run: echo "Archive production artifacts to Nexus skipped"

      # - name: Deploy to Netlify
      #   uses: netlify/actions/cli@v3
      #   with:
      #     args: deploy --prod
      #   env:
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
